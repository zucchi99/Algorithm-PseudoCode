/*
    APSP := All Pairs Shortest Path
    consider:
        min heap as queue
    complexity (same with matrix or adj lists):
        initialization (matrix):     θ(|V|^2)
        initialization (adj lists):  θ(|V|^2) * O(|E|)
        execution:                   θ(|V|^3)
    θ(|V|^2) + θ(|V|^3) = θ(|V|^3)
*/
APSP_Floyd_Warshall(G) {
    M = new matrix[|V| * |V|] //distance matrix
    P = new matrix[|V| * |V|] //predecessor matrix
    for (i = 1 to |V|) { //θ(|V|)
        for (j = 1 to |V|) { //θ(|V|)
            if (i == j) {
                M[i, j] = 0
                P[i, j] = NULL
            } else if ({i, j} in E) { //O(|E|) with adj lists, θ(1) with adj matrix
                M[i, j] = W(E)
                P[i, j] = i
            } else {
                M[i, j] = INFINITE
                P[i, j] = NULL
            }
        }
    }
    for (k = 1 to |V|) { //θ(|V|)
        for (i = 1 to |V|) { //θ(|V|)
            for (j = 1 to |V|) { //θ(|V|)
                if (M[i, k] + M[k, j] < M[i, j]) {
                    M[i, j] = M[i, k] + M[k, j]
                    P[i, j] = P[k, j]
                }
            }
        }
    }
}